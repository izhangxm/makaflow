
# app设置
mode: manager
listen: "::"
port: 8180

# rpc_key仅用户非public服务时验证
rpc_key: "123456"
server_url: www.example.com

# 模板
subscribe_clash_tp: ./data/clash_tp.yaml
subscribe_clashmeta_tp: ./data/clashmeta_tp.yaml
subscribe_singbox_tp: ./data/singbox_tp.yaml

# 配置
xray_profile: ./xray_profile.yaml
singbox_profile: ./singbox_profile.yaml
user_profile_path: ./runtime/users.yaml


# 服务配置文件
server_config_dir: ./runtime
# xray_server_cfg: /usr/local/etc/xray/config.json
# singbox_server_cfg: /etc/sing-box/config.json
xray_server_cfg: ./runtime/xray_config.json
singbox_server_cfg: ./runtime/singbox_config.json


# 第三方订阅节点
# - 获取节点的配置用来生成用户订阅，优先使用本服务为各个服务器生成的本地文件，
#   如果api强制使用远程，则请求远程节点配置
# - 过期时间为3天
# - 文件有是否过期的标识: outdated: false
# - outdated为true或者超过1天，则强制更新
third_sub:
  miaona:
    prefix: ""
    sub_url: https://www.example.com
    # 替换节点的url为镜像地址
    server_mirr:
      - ori: www.example.com
        mirr: www.mycnamedomain.com

# 通过API管理的功能包括
# - 更新节点的配置并重启服务，并使用updated字段来标识是否已经同步到该节点，通过force选项强制同步到节点
# - 获取节点的配置用来生成用户订阅，优先使用本服务为各个服务器生成的本地文件，如果api强制使用远程或文件updated是否为false，则请求远程节点配置

# 属于本机管理的订阅节点
slaver:
  nodes:
    banwus:
      enable: true
      contry: us
      name: GIA|美国1
      # 这里配置api的前置url
      api_base: "https://gia01.example.com/api"
      # rpc密钥
      rpc_key: "123456"
      # 这里是server的url地址
      server_url: gia01.example.com
    
    linodeus:
      enable: true
      contry: us
      name: TRA|美国2
      # 这里配置api的前置url
      api_base: "https://linodeus.example.com/api"
      # rpc密钥
      rpc_key: "123456"
      # 这里是server的url地址
      server_url: linodeus.example.com


# 接下来是客户端的一些默认配置
# shadowtls版本支持
client_shadowtls_versions:
  clash:
  stash:
  shadowrocket:
    - 3
  clashmeta:
    - 3
  singbox:
    - 3

# 这里singbox 每种协议出站的一些默认设定
singbox_outbound_default:
  multiplex:
    enabled: true
    protocol: smux
    max_connections: 8
    min_streams: 4

  shadowsocks:
    type: shadowsocks
    network: tcp
    udp_over_tcp: false # 打开后与multiplex冲突
    multiplex:
      enabled: true

# clashmeta 每种协议出站的一些默认设定
clashmeta_proxies_default:
  ss:
    type: ss
    udp: true
  hysteria:
    type: hysteria




