port: 7891 # HTTP(S) 代理服务器端口
socks-port: 7892 # SOCKS5 代理端口
mixed-port: 7890 # HTTP(S) 和 SOCKS 代理混合端口
redir-port: 7893 # 透明代理端口，用于 Linux 和 MacOS

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7895

allow-lan: true # 允许局域网连接
bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址

#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 clash 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict

mode: rule

#自定义 geodata url
geox-url:
  geoip: "https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geoip.dat"
  geosite: "https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geosite.dat"
  mmdb: "https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/Country.mmdb"

log-level: debug # 日志等级 silent/error/warning/info/debug

ipv6: true # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录


# tls:
#   certificate: string # 证书 PEM 格式，或者 证书的路径
#   private-key: string # 证书对应的私钥 PEM 格式，或者私钥路径
#   custom-certifactes:
#     - |
#       -----BEGIN CERTIFICATE-----
#       format/pem...
#       -----END CERTIFICATE-----

external-controller: 0.0.0.0:9090 # RESTful API 监听地址
external-controller-tls: 0.0.0.0:9443 # RESTful API HTTPS 监听地址，需要配置 tls 部分配置文件
secret: "123456" # `Authorization:Bearer ${secret}`

# tcp-concurrent: true # TCP 并发连接所有 IP, 将使用最快握手的 TCP
# external-ui: /path/to/ui/folder # 配置 WEB UI 目录，使用 http://{{external-controller}}/ui 访问

# interface-name: en0 # 设置出口网卡

# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
# 可选： "chrome","firefox","safari","ios","random","none" options.
# Utls is currently support TLS transport in TCP/grpc/WS/HTTP for VLESS/Vmess and trojan.
global-client-fingerprint: chrome

# routing-mark:6666 # 配置 fwmark 仅用于 Linux
experimental:

# 类似于 /etc/hosts, 仅支持配置单个 IP
hosts:
# '*.clash.dev': 127.0.0.1
# '.dev': 127.0.0.1
# 'alpha.clash.dev': '::1'
# test.com: [1.1.1.1, 2.2.2.2]
# clash.lan: clash # clash 为特别字段，将加入本地所有网卡的地址
# baidu.com: google.com # 只允许配置一个别名

# 缓存设置(文件位置./cache.db)
profile: # 存储 select 选择记录
  store-selected: true
  # 持久化 fake-ip
  store-fake-ip: true

# clashforwindows的特殊配置
cfw-latency-timeout: 3000
cfw-latency-url: "http://cp.cloudflare.com/generate_204"
cfw-conn-break-strategy: true

#【Meta专属】使用geoip.dat数据库(默认：false使用mmdb数据库)
geodata-mode: true
# OpenClash的配置
geodata-loader: standard

#【Meta专属】TCP连接并发，如果域名解析结果对应多个IP
tcp-concurrent: true 


# tun模式还需要在调整，目前工作不是很好
tun:
  enable: false
  stack: gvisor # system or gvisor
  dns-hijack:
    - 0.0.0.0:53 # 需要劫持的 DNS
  auto-detect-interface: true # 自动识别出口网卡
  auto-route: true # 配置路由表
  mtu: 9000 # 最大传输单元
  # strict_route: true # 将所有连接路由到tun来防止泄漏，但你的设备将无法其他设备被访问
  # inet4_route_address: # 启用 auto_route 时使用自定义路由而不是默认路由
  #   - 0.0.0.0/1
  #   - 128.0.0.0/1
  # inet6_route_address: # 启用 auto_route 时使用自定义路由而不是默认路由
  #   - "::/1"
  #   - "8000::/1"
  # endpoint_independent_nat: false # 启用独立于端点的 NAT
  # include_uid: # UID 规则仅在 Linux 下被支持，并且需要 auto_route
  # - 0
  # include_uid_range: # 限制被路由的的用户范围
  # - 1000-99999
  # exclude_uid: # 排除路由的的用户
  #- 1000
  # exclude_uid_range: # 排除路由的的用户范围
  # - 1000-99999
  
  # Android 用户和应用规则仅在 Android 下被支持
  # 并且需要 auto_route
  
  # include_android_user: # 限制被路由的 Android 用户
  # - 0
  # - 10
  # include_package: # 限制被路由的 Android 应用包名
  # - com.android.chrome
  # exclude_package: # 排除被路由的 Android 应用包名
  # - com.android.captiveportallogin


#ebpf配置
# ebpf:
#   auto-redir: # redirect 模式，仅支持 TCP
#     - eth0
#   redirect-to-tun: # UDP+TCP 使用该功能请勿启用 auto-route
#     - eth0

# 嗅探域名【Meta专属】
sniffer:
  enable: true
  ## 对 redir-host 类型识别的流量进行强制嗅探
  ## 如：Tun、Redir 和 TProxy 并 DNS 为 redir-host 皆属于
  force-dns-mapping: true
  ## 对所有未获取到域名的流量进行强制嗅探
  parse-pure-ip: true
  # 是否使用嗅探结果作为实际访问，默认 true
  # 全局配置，优先级低于 sniffer.sniff 实际配置
  override-destination: true
  
  # TLS默认嗅探443， HTTP默认嗅探 80
  sniff:
    # TLS 默认如果不配置 ports 默认嗅探 443
    TLS:
      ports: [143,443,993,1443,8443]
      override-destination: true
    # 默认嗅探 80
    HTTP:
      # 需要嗅探的端口
      ports: [80,8080-8880]
      # 是否使用嗅探结果作为实际访问
      override-destination: true

  force-domain:
    - '+.netflix.com'
    - '+.nflxvideo.net'
    - '+.amazonaws.com'
    - '+.media.dssott.com'

  # 列表中的sni字段，保留mapping结果，不通过嗅探还原域名, 优先级比force-domain高
  skip-domain:
    - "Mijia Cloud" #米家设备，建议加
    - "dlg.io.mi.com"
    - "+.jd.com" # 京东
    - "+.apple.com" #苹果域名，建议加

# DNS 服务器配置
# 极其复杂 其需要配合上方的sniff嗅探才能很好的
# 防止污染 分流
dns:
  enable: true #DNS服务器开关(false/true)
  listen: 0.0.0.0:53 #DNS服务器监听地址
  ipv6: false #IP6解析开关；如果为false，将返回ip6结果为空

  # DNS模式(redir-host/fake-ip), 
  # redir-host传递域名，可远程解析 【Meta专属】
  enhanced-mode: redir-host

  #Fake-IP解析地址池
  fake-ip-range: 198.18.0.1/16

  # 仅填写 DNS 服务器的 IP 地址, 解析非IP的dns用的dns服务器,只支持纯IP
  # tls协议 即DoT，dns over tls，默认端口是853
  # DoH，DNS over http，默认端口是443
  default-nameserver:
    - https://120.53.53.53/dns-query
    - https://223.5.5.5/dns-query
  # 支持 UDP / TCP / DoT / DoH 协议的 DNS 服务，可以指明具体的连接端口号。
  # 所有 DNS 请求将会直接发送到服务器，不经过任何代理。
  # Stash 会使用最先获得的解析记录回复 DNS 请求
  # 不建议配置超过 2 个 DNS 服务器，会增加系统功耗 默认DNS服务器，支持udp/tcp/dot/doh/doq
  # 速度会慢一些，但是会解决dns污染劫持的问题，比如AppleStore内就会劫持所有的udp53端口的查询
  # 导致无法使用代理服务，因为通过自定义的dns服务器，根本查不到结果
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
  # 按指定策略分流 DNS ，可以使用 geosite 分流 DNS 解析，暂时没发现什么用
  # nameserver-policy:
  #   "geosite:cn":
  #     - 119.29.29.29

  # 当proxy里的server为域名时，使用该列表里的dns服务器解析。
  # 当配置文件无此字段的时候，使用nameserver列表里的dns解析；
  # 支持UDP/TCP/DoT/DoH/DoQ
  # proxy-server-nameserver:
    # - https://doh.pub/dns-query
    # - https://dns.alidns.com/dns-query
  # ===================================================================
  #  回落服务设置，针对污染问题而设计
  # ====================================================================
  # 回落DNS服务器过滤
  # geoip为真时，不匹配为geoip规则的使用fallback返回结果
  # ipcidr列表中的ip使用fallback返回解析结果
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4
  #回落DNS服务器，支持udp/tcp/dot/doh/doq
  fallback:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
  # 针对fake-ip的模式的设置
  # 在以下列表的域名将不会被解析为 fake ip，这些域名相关的解析请求将会返回它们真实的 IP 地址
  fake-ip-filter:
    - "*.lan"
    # Stun Services
    - "+.stun.*.*"
    - "+.stun.*.*.*"
    - "+.stun.*.*.*.*"
    - "+.stun.*.*.*.*.*"

    # Google Voices
    - "lens.l.google.com"

    # Nintendo Switch
    - "*.n.n.srv.nintendo.net"

    # PlayStation
    - "+.stun.playstation.net"

    # XBox
    - "xbox.*.*.microsoft.com"
    - "*.*.xboxlive.com"

    # Microsoft
    - "*.msftncsi.com"
    - "*.msftconnecttest.com"

    # Bilibili CDN
    - "*.mcdn.bilivideo.cn"

    # Apple
    - "*.apple.com"
    - "*.apple.com.cn"
    - "*.icloud.com"
    - "*.icloud.com.cn"
    - localhost.ptlogin2.qq.com

proxies: []

proxy-groups:
  - name: Proxy
    type: select
    proxies: ["HK", "TW", "JP", "SG", "US", "Auto", "DIRECT"]
  - name: Auto
    type: url-test
    proxies: []
    url: http://cp.cloudflare.com/generate_204
    interval: 300
    tolerance: 50
    disable-udp: false
    lazy: false
  - name: HK
    type: select
    filter: "HK|香港|🇭🇰"
    proxies: []
    url: http://cp.cloudflare.com/generate_204
    interval: 300
    tolerance: 50
    disable-udp: false
    lazy: false
  - name: JP
    type: select
    filter: "JP|日本|🇯🇵"
    proxies: []
    url: http://cp.cloudflare.com/generate_204
    interval: 300
    tolerance: 50
    disable-udp: false
    lazy: false
  - name: SG
    type: select
    filter: "SG|新加坡|狮城|🇸🇬"
    proxies: []
    url: http://cp.cloudflare.com/generate_204
    interval: 300
    tolerance: 50
    disable-udp: false
    lazy: false
  - name: TW
    type: select
    filter: "TW|台湾|民国"
    proxies: []
    url: http://cp.cloudflare.com/generate_204
    interval: 300
    tolerance: 50
    disable-udp: false
    lazy: false
  - name: US
    type: select
    filter: "US|美国|🇺🇸"
    proxies: []
    url: http://cp.cloudflare.com/generate_204
    interval: 300
    tolerance: 50
    disable-udp: false
    lazy: false
  - name: OpenAI
    type: select
    proxies: ["US", "Proxy", "HK", "TW", "JP", "SG",  "Auto", "DIRECT"]
  - name: YouTube
    type: select
    proxies: ["Proxy", "HK", "TW", "JP", "SG", "US", "Auto", "DIRECT"]
  - name: Netflix
    type: select
    proxies: ["Proxy", "HK", "TW", "JP", "SG", "US", "Auto", "DIRECT"]
  - name: Steam
    type: select
    proxies: ["Proxy", "HK", "TW", "JP", "SG", "US", "Auto", "DIRECT"]
  - name: Bing
    type: select
    proxies: ["Proxy", "US", "HK", "TW", "JP", "SG",  "Auto", "DIRECT"]
  - name: GitHub
    type: select
    proxies: ["Proxy", "US", "HK", "TW", "JP", "SG",  "Auto", "DIRECT"]
  - name: Apple国外
    type: select
    proxies: ["Proxy", "HK", "TW", "JP", "SG", "US", "Auto", "DIRECT"]
  - name: GoogleVoice
    type: select
    proxies: ["US", "Proxy", "Auto", "DIRECT"]

  - name: Final
    type: select
    proxies: ["Proxy", "DIRECT", "HK", "TW", "JP", "SG", "US", "Auto"]

rule-providers:
  XJProxy:
    type: http
    path: ./rule-set/XJProxy.yaml
    behavior: classical
    url: https://izhangxm-surgio.oss-cn-beijing.aliyuncs.com/rule-provider/xj_proxy.yaml
    interval: 7200

# 原则：
# 1、以尽量少得触发dns查询为准则
# 2、优先域名分流，优先热门分流
# 3、兜底出口走代理
rules:
  # 跳过局域网
  - GEOIP,private,DIRECT,no-resolve
  - IP-CIDR,10.0.0.0/8,DIRECT,no-resolve
  - IP-CIDR,172.16.0.0/12,DIRECT,no-resolve
  - IP-CIDR,192.168.0.0/16,DIRECT,no-resolve
  # 自定义的高优先级规则
  - PROCESS-NAME,microsocks,Proxy
  - RULE-SET,XJProxy,Proxy
  - DOMAIN-KEYWORD,bing,Bing
  #OpenAI
  - DOMAIN-KEYWORD,openai,OpenAI
  - DOMAIN,cdn.auth0.com,OpenAI
  # - DOMAIN,challenges.cloudflare.com,OpenAI
  - DOMAIN,openaiapi-site.azureedge.net,OpenAI
  - DOMAIN-SUFFIX,ai.com,OpenAI
  - DOMAIN-SUFFIX,identrust.com,OpenAI
  - DOMAIN-SUFFIX,openai.com,OpenAI
  - DOMAIN-KEYWORD,paradox,Steam
  # 热门国外应用：netflix，github和youtube
  - GEOSITE,netflix,Netflix
  - GEOIP,netflix,Netflix,no-resolve
  - GEOSITE,github,GitHub
  - GEOSITE,youtube,YouTube
  - GEOSITE,facebook,Proxy
  - GEOIP,facebook,Proxy,no-resolve
  - GEOSITE,telegram,Proxy
  - GEOIP,telegram,Proxy,no-resolve
  - GEOSITE,twitter,Proxy
  - GEOIP,twitter,Proxy,no-resolve
  - DOMAIN,lens.l.google.com,GoogleVoice
  # steam游戏规则，注意国内流量必须在前面
  - GEOSITE,category-games@cn,DIRECT
  - GEOSITE,Steam,Steam
  # AppleTV的规则
  - DOMAIN,hls-amt.itunes.apple.com,Apple国外
  - DOMAIN,hls.itunes.apple.com,Apple国外
  - DOMAIN,np-edge.itunes.apple.com,Apple国外
  - DOMAIN,play-edge.itunes.apple.com,Apple国外
  - DOMAIN,tv.applemusic.com,Apple国外
  - DOMAIN-SUFFIX,videos.apple.com,Apple国外
  - DOMAIN,uts-api.itunes.apple.com,Apple国外
  - DOMAIN-SUFFIX,tv.apple.com,Apple国外
  - PROCESS-NAME,tv,Apple国外
  # AppleNews规则
  - DOMAIN,apple.comscoreresearch.com,Apple国外
  - DOMAIN,gateway.icloud.com,Apple国外
  - DOMAIN,gspe1-ssl.ls.apple.com,Apple国外
  - DOMAIN,news-assets.apple.com,Apple国外
  - DOMAIN,news-client-search.apple.com,Apple国外
  - DOMAIN,news-client.apple.com,Apple国外
  - DOMAIN,news-edge.apple.com,Apple国外
  - DOMAIN,news-events.apple.com,Apple国外
  - DOMAIN-SUFFIX,apple.news,Apple国外
  - PROCESS-NAME,news,Apple国外
  # 需要直连的流量
  - GEOSITE,google-cn,DIRECT
  - GEOSITE,icloud@cn,DIRECT
  - GEOSITE,apple@cn,DIRECT
  - GEOSITE,apple-cn,DIRECT
  - GEOSITE,microsoft@cn,DIRECT
  - GEOSITE,geolocation-cn,DIRECT
  - GEOIP,cn,DIRECT
  # 最终流量出口
  - MATCH,Final
